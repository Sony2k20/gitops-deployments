immich:
  immich:
    metrics:
      # Enabling this will create the service monitors needed to monitor immich with the prometheus operator
      enabled: false
    persistence:
      library:
        existingClaim: immich
  redis:
    enabled: true
  env:
    DB_HOSTNAME: "postgresql.postgresql.svc.cluster.local"
    DB_USERNAME: immich
    DB_DATABASE_NAME: immich
    DB_PASSWORD: null
    IMMICH_IGNORE_MOUNT_CHECK_ERRORS: true
  envFrom:
    - secretRef:
        name: immich-secret
  image:
    tag: v2.1.0
  resources:
    requests:
      memory: "128Mi"
      cpu: "250m"
    limits:
      memory: "8Gi"
      cpu: "4000m"
  postgresql:
    global:
      postgresql:
        auth:
          existingSecret: immich-secret

service:
  main:
    enabled: true
    controller: main
    primary: true
    type: NodePort
    ports:
      http:
        enabled: true
        primary: true
        nodePort: 30009
        port: 2283
        targetPort: http
        protocol: HTTP

  # service:
  #   port: 2283
  #   nodePort: 30009
  # ingress:
  #   className: traefik
  #   annotations:
  #     traefik.ingress.kubernetes.io/client-max-body-size: "0"
  #     traefik.ingress.kubernetes.io/router.middlewares: |
  #       kube-system-redirect-https@kubernetescrd
  #   path: /
  #   host: immich.csnguyen.de
  #   tls:
  #     - secretName: csnguyen-tls
  #       hosts:
  #         - immich.csnguyen.de

  ingress:
    main:
      enabled: true
      className: traefik
      annotations:
        traefik.ingress.kubernetes.io/client-max-body-size: "0"
        traefik.ingress.kubernetes.io/router.middlewares: kube-system-redirect-https@kubernetescrd
      hosts:
        - host: immich.csnguyen.de
          paths:
            - path: /
              service:
                identifier: main
      tls:
        - secretName: csnguyen-tls
          hosts:
            - immich.csnguyen.de
